SOT_REPO = "https://github.com/stepankuzmin/copybara-sot.git"
SOT_BRANCH = "main"

DESTINATION_REPO = "https://github.com/stepankuzmin/copybara-dst.git"
DESTINATION_BRANCH = "main"

COMMITTER = "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"

PROJECT_DIR = "project"

# what can be pushed to the destination repo
PUSH_INCLUDE = ["${PROJECT_DIR}/**", ".github/workflows/copybara.yml"]
PUSH_EXCLUDE = []

# what can be read in the destination PR
PR_INCLUDE = ["**"]
PR_EXCLUDE = ["${PROJECT_DIR}/copy.bara.sky", ".github/**"]

# what can be modified in SoT repo via PR
PR_DESTINATION_INCLUDE = ["${PROJECT_DIR}/**"]
PR_DESTINATION_EXCLUDE = ["${PROJECT_DIR}/copy.bara.sky"]

# Push workflow: monorepo to public repo
core.workflow(
    name = "push",
    origin = git.origin(
        url = SOT_REPO,
        ref = SOT_BRANCH
    ),
    destination = git.github_destination(
        url = DESTINATION_REPO,
        push = DESTINATION_BRANCH
    ),
    mode = "ITERATIVE",
    authoring = authoring.pass_thru(COMMITTER),
    origin_files = glob(PUSH_INCLUDE, exclude = PUSH_EXCLUDE),
    transformations = [
        core.move(PROJECT_DIR, ""),
        metadata.scrubber("\\(#", replacement = "(internal-"), # replace "#PR" with "internal-PR"
        metadata.expose_label("COPYBARA_INTEGRATE_REVIEW"),
        metadata.restore_author("ORIGINAL_AUTHOR", search_all_changes = True),
    ]
)

# Pull Request workflow: public repo to monorepo
core.workflow(
    name = "pr",
    origin = git.github_pr_origin(
        url = DESTINATION_REPO,
        branch = DESTINATION_BRANCH,
    ),
    destination = git.github_pr_destination(
        url = SOT_REPO,
        destination_ref = SOT_BRANCH,
        integrates = [],
        title = "${GITHUB_PR_TITLE}",
        update_description = True,
    ),
    mode = "CHANGE_REQUEST",
    set_rev_id = False,
    authoring = authoring.pass_thru(COMMITTER),
    origin_files = glob(PR_INCLUDE, exclude = PR_EXCLUDE),
    destination_files = glob(PR_DESTINATION_INCLUDE, exclude = PR_DESTINATION_EXCLUDE),
    transformations = [
        core.move("", PROJECT_DIR),
        metadata.replace_message("${GITHUB_PR_TITLE}\n\n${GITHUB_PR_BODY}\n\nCloses: ${GITHUB_PR_URL}"),
        metadata.save_author("ORIGINAL_AUTHOR"),
    ]
)
